/* Drop existing tables */
DROP TABLE IF EXISTS public.users CASCADE;
DROP TABLE IF EXISTS public.block_replies CASCADE;
DROP TABLE IF EXISTS public.guilds CASCADE;
DROP TABLE IF EXISTS public.user_guilds CASCADE;
DROP TABLE IF EXISTS public.reactions CASCADE;
DROP TABLE IF EXISTS public.banned_text CASCADE;

/* Create tables */
CREATE TABLE IF NOT EXISTS public.users (
    id BIGINT PRIMARY KEY NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    username TEXT NOT NULL,
    banned BOOLEAN DEFAULT FALSE NOT NULL
);

CREATE TABLE IF NOT EXISTS public.block_replies (
    id SERIAL PRIMARY KEY NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    user_id BIGINT NOT NULL,
    blocked_user BIGINT NOT NULL,
    message TEXT NOT NULL
);


CREATE TABLE IF NOT EXISTS public.guilds (
    id BIGINT PRIMARY KEY NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    name TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS public.user_guilds (
    id SERIAL PRIMARY KEY NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    user_id BIGINT NOT NULL,
    guild_id BIGINT NOT NULL,
    message_count INT DEFAULT 0 NOT NULL
);

CREATE TABLE IF NOT EXISTS public.reactions (
    id SERIAL PRIMARY KEY NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    guild_id BIGINT NOT NULL,
    channel_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    added_by BIGINT NOT NULL,
    emoji TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS public.banned_text (
    id SERIAL PRIMARY KEY NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    guild_id BIGINT NOT NULL,
    channel_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    added_by BIGINT NOT NULL,
    text TEXT NOT NULL,
    reason TEXT
);

/* Add foreign keys */
ALTER TABLE public.user_guilds ADD FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE public.user_guilds ADD FOREIGN KEY (guild_id) REFERENCES public.guilds(id) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE public.reactions ADD FOREIGN KEY (guild_id) REFERENCES public.guilds(id) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE public.reactions ADD FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE public.reactions ADD FOREIGN KEY (added_by) REFERENCES public.users(id) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE public.banned_text ADD FOREIGN KEY (guild_id) REFERENCES public.guilds(id) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE public.banned_text ADD FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE public.banned_text ADD FOREIGN KEY (added_by) REFERENCES public.users(id) ON DELETE CASCADE ON UPDATE CASCADE;

/* Add permissions */
GRANT ALL PRIVILEGES ON SCHEMA public TO nerdbot;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO nerdbot;
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO nerdbot;
GRANT ALL PRIVILEGES ON ALL FUNCTIONS IN SCHEMA public TO nerdbot;